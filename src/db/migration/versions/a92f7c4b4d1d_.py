"""empty message

Revision ID: a92f7c4b4d1d
Revises: d738d80cda57
Create Date: 2024-04-30 04:32:31.203944

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a92f7c4b4d1d'
down_revision: Union[str, None] = 'd738d80cda57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parts',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный идентификатор'),
    sa.Column('product_id', sa.UUID(), nullable=False, comment='Уникальный идентификатор товара'),
    sa.Column('part_num', sa.INTEGER(), nullable=False, comment='порядковый номер части'),
    sa.Column('hash_sum', sa.INTEGER(), nullable=False, comment='хэш сумма'),
    sa.Column('size', sa.INTEGER(), nullable=False, comment='Размер в байтах'),
    sa.Column('row', sa.INTEGER(), nullable=False, comment='Количесто записей'),
    sa.Column('inner_stamp', sa.TIMESTAMP(), nullable=False, comment='Дата добавления'),
    sa.Column('update_stamp', sa.TIMESTAMP(), nullable=False, comment='Дата обновления'),
    sa.PrimaryKeyConstraint('id'),
    comment='Состав доступных товаров'
    )
    op.create_table('parts_quality',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный идентификатор записи'),
    sa.Column('part_id', sa.UUID(), nullable=False, comment='Уникальный идентификатор куска'),
    sa.Column('metric_id', sa.UUID(), nullable=False, comment='Уникальный идентификатор метрики'),
    sa.Column('value', sa.INTEGER(), nullable=False, comment='значение метрики'),
    sa.Column('update_stamp', sa.TIMESTAMP(), nullable=False, comment='Дата обновления'),
    sa.PrimaryKeyConstraint('id'),
    comment='качество партиций дата-продукта'
    )
    op.create_table('product',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный идентификатор'),
    sa.Column('name', sa.TEXT(), nullable=False, comment='Наименование дата-продукта'),
    sa.Column('source_id', sa.UUID(), nullable=False, comment='Уникальный идентификатор источника'),
    sa.Column('owner_id', sa.UUID(), nullable=False, comment='Уникальный идентификатор владельца'),
    sa.Column('size', sa.INTEGER(), nullable=False, comment='Размер в байтах'),
    sa.Column('parts', sa.INTEGER(), nullable=False, comment='Определенных частей относящихся к продукту'),
    sa.Column('row', sa.INTEGER(), nullable=False, comment='Количесто записей'),
    sa.Column('inner_stamp', sa.TIMESTAMP(), nullable=False, comment='Дата добавления'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник доступных дата-продуктов'
    )
    op.create_table('storage_owner',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный идентификатор'),
    sa.Column('name', sa.TEXT(), nullable=False, comment='Имя владельца'),
    sa.Column('email', sa.TEXT(), nullable=False, comment='электронная почта'),
    sa.Column('inner_stamp', sa.TIMESTAMP(), nullable=False, comment='Дата добавления'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='Пометка удаления'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник владельцев'
    )
    op.create_table('storage',
    sa.Column('id', sa.UUID(), nullable=False, comment='Уникальный идентификатор'),
    sa.Column('owner_id', sa.UUID(), nullable=True, comment='id владельца хранилища'),
    sa.Column('type', sa.Enum('googleDrive', 'yandexDisk', name='storagetype'), nullable=False),
    sa.Column('service_account_info', sa.TEXT(), nullable=False, comment='инфа для коннекта'),
    sa.Column('url', sa.String(), nullable=False, comment='часть URL источника'),
    sa.Column('inner_stamp', sa.TIMESTAMP(), nullable=False, comment='Дата добавления'),
    sa.Column('is_deleted', sa.Boolean(), nullable=False, comment='Пометка удаления'),
    sa.ForeignKeyConstraint(['owner_id'], ['storage_owner.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    comment='Справочник доступных дата-продуктов'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('storage')
    op.drop_table('storage_owner')
    op.drop_table('product')
    op.drop_table('parts_quality')
    op.drop_table('parts')
    # ### end Alembic commands ###
